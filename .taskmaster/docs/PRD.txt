# NiFiCDC 프로젝트 요구사항 정의서 (PRD)

## 1. 프로젝트 개요

### 1.1 프로젝트명
NiFiCDC - 웹 기반 Change Data Capture 서비스

### 1.2 작성일
2025년 7월

### 1.3 버전
v1.0

## 2. 프로젝트 목적 및 목표

### 2.1 목적
외부 Apache NiFi를 백엔드 엔진으로 활용하여 사용자 친화적인 웹 기반 CDC(Change Data Capture) 서비스를 제공

### 2.2 목표
- 복잡한 NiFi 조작 없이 웹 UI를 통한 간편한 CDC 작업 구성
- 다양한 데이터 소스 지원 (DB, 파일)
- 데이터 맵핑 및 변환 기능 제공
- 실시간 모니터링 및 작업 관리

## 3. 프로젝트 범위

### 3.1 포함 범위
- NiFi API를 통한 CDC 작업 자동화
- 웹 기반 사용자 인터페이스
- 시스템/데이터/맵핑/작업 정의서 관리
- 작업 스케줄링 및 모니터링

### 3.2 제외 범위
- NiFi 자체 설치 및 관리
- 데이터 저장소 관리
- 데이터 품질 검증

## 4. 이해관계자

- **최종 사용자**: 데이터 엔지니어, 데이터 분석가
- **시스템 관리자**: IT 인프라 담당자
- **개발팀**: 프론트엔드/백엔드 개발자
- **운영팀**: 시스템 운영 담당자

## 5. 기능 요구사항

### 5.1 NiFi 연동
- **FR-001**: 외부 NiFi 인스턴스의 접속 정보 등록 및 관리
- **FR-002**: NiFi API를 통한 실시간 통신
- **FR-003**: NiFi 연결 상태 확인 및 검증

### 5.2 시스템 관리
- **FR-101**: 시스템 정의서 CRUD (생성/조회/수정/삭제) 기능
- **FR-102**: 지원 시스템 타입
  - DB: Oracle, PostgreSQL, SQLite
  - 파일: FTP, Local File System
- **FR-103**: 시스템별 접속 정보 암호화 저장
- **FR-104**: 연결 테스트 기능

### 5.3 데이터 관리
- **FR-201**: 데이터 정의서 CRUD 기능
- **FR-202**: 시스템 타입별 스키마 정의
- **FR-203**: 컬럼 정보 관리 (이름, 데이터 타입, 제약조건)
- **FR-204**: 스키마 버전 관리

### 5.4 맵핑 관리
- **FR-301**: 맵핑 정의서 CRUD 기능
- **FR-302**: 소스-타겟 데이터 스키마 연결
- **FR-303**: 컬럼 간 1:1, 1:N, N:1 맵핑 지원
- **FR-304**: 데이터 변환 규칙 정의
- **FR-305**: 맵핑 검증 기능

### 5.5 작업 관리
- **FR-401**: 작업 정의서 CRUD 기능
- **FR-402**: 실행 스케줄 설정
  - 일회성 예약 실행
  - 주기적 실행 (분/시간/일/주/월 단위)
- **FR-403**: 작업 활성화/비활성화 토글
- **FR-404**: 작업 우선순위 설정
- **FR-405**: 수동 실행 기능

### 5.6 모니터링
- **FR-501**: 작업 실행 이력 조회
- **FR-502**: 실시간 작업 상태 모니터링
- **FR-503**: 성공/실패 통계 대시보드
- **FR-504**: 에러 로그 조회 및 분석
- **FR-505**: 성능 메트릭 표시 (처리량, 지연시간 등)

## 6. 비기능 요구사항

### 6.1 성능
- **NFR-001**: 동시 사용자 100명 이상 지원
- **NFR-002**: 웹 페이지 로딩 시간 3초 이내
- **NFR-003**: API 응답시간 1초 이내

### 6.2 보안
- **NFR-101**: 사용자 인증 및 권한 관리
- **NFR-102**: 접속 정보 암호화
- **NFR-103**: API 통신 SSL/TLS 암호화
- **NFR-104**: 감사 로그 기록

### 6.3 가용성
- **NFR-201**: 시스템 가용성 99.5% 이상
- **NFR-202**: 장애 복구 시간 1시간 이내

### 6.4 사용성
- **NFR-301**: 직관적인 UI/UX 디자인
- **NFR-302**: 반응형 웹 디자인 지원
- **NFR-303**: 다국어 지원 (한국어, 영어)

### 6.5 확장성
- **NFR-401**: 새로운 데이터 소스 타입 추가 가능
- **NFR-402**: 플러그인 아키텍처 지원

## 7. 기술 요구사항

### 7.1 프론트엔드
- Vue.js 기반 SPA
- 반응형 디자인
- 모던 UI 프레임워크 (Material-UI, Ant Design 등)

### 7.2 백엔드
- RESTful API 설계
- Node.js/Python/Java 중 선택
- 마이크로서비스 아키텍처 고려

### 7.3 데이터베이스
- 메타데이터 저장용 RDBMS
- 캐싱을 위한 Redis 고려

### 7.4 인프라
- Docker 컨테이너화

## 8. 제약사항

- 외부 NiFi 인스턴스가 사전에 구성되어 있어야 함
- NiFi API 버전 호환성 확인 필요
- 네트워크 방화벽 정책에 따른 연결 제한

## 9. 가정사항

- NiFi는 안정적으로 운영되고 있음
- 사용자는 기본적인 CDC 개념을 이해하고 있음
- 충분한 네트워크 대역폭이 확보되어 있음

## 10. 용어 정의

- **CDC (Change Data Capture)**: 데이터베이스의 변경사항을 실시간으로 감지하고 캡처하는 기술
- **NiFi**: Apache NiFi, 데이터 플로우 자동화 도구
- **시스템 정의서**: CDC 대상 시스템의 접속 정보 및 설정
- **데이터 정의서**: 데이터의 구조와 형식을 정의한 스키마
- **맵핑 정의서**: 소스와 타겟 간 데이터 변환 규칙
- **작업 정의서**: CDC 작업의 실행 스케줄 및 설정

## 11. 마일스톤

### Phase 1 (3개월)
- 기본 CRUD 기능 구현
- NiFi 연동 기능
- 웹 UI 기본 구조

### Phase 2 (2개월)
- 스케줄링 기능
- 모니터링 대시보드
- 보안 기능 강화

### Phase 3 (1개월)
- 성능 최적화
- 사용자 피드백 반영
- 안정화 및 배포

## 12. 리스크 및 대응방안

| 리스크 | 영향도 | 발생확률 | 대응방안 |
|--------|--------|----------|----------|
| NiFi API 변경 | 높음 | 중간 | API 버전 관리 및 호환성 레이어 구현 |
| 네트워크 장애 | 높음 | 낮음 | 재시도 로직 및 오프라인 모드 지원 |
| 대용량 데이터 처리 | 중간 | 높음 | 배치 처리 및 페이징 구현 |
| 보안 취약점 | 높음 | 중간 | 정기적인 보안 감사 및 패치 |

## 13. 성공 지표

- 사용자 만족도 85% 이상
- 시스템 안정성 99.5% 이상
- CDC 작업 구성 시간 50% 단축
- 월간 활성 사용자 100명 이상

## 14. 참고사항

- Apache NiFi 공식 문서: https://nifi.apache.org/docs.html
- CDC 패턴 가이드라인
- 데이터 거버넌스 정책

---
*본 문서는 NiFiCDC 프로젝트의 요구사항을 정의한 것으로, 프로젝트 진행 중 필요에 따라 업데이트될 수 있습니다.*
